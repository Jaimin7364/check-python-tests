name: AI-Powered Test Runner

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - '**/*.py'

jobs:
  generate-and-run-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Get changed Python files
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        files: |
          **/*.py
    
    - name: Run AI Test Generator
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        # Choose your LLM provider (uncomment one):
        LLM_PROVIDER: "groq"  # Options: openrouter, groq, together, huggingface
        
        # Add the corresponding API key secret:
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        # OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        # TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
        # HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
        
        CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        echo "üîç Changed files: $CHANGED_FILES"
        echo "ü§ñ Using LLM provider: $LLM_PROVIDER"
        python ci_pr_test_runner.py
    
    - name: Comment on PR with results
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = './tests_pr/pr_generated_tests.py';
          
          let comment = '## ü§ñ AI Test Generation Results\n\n';
          
          if (fs.existsSync(path)) {
            comment += '‚úÖ **Tests generated successfully!**\n\n';
            comment += 'üìÅ Generated test file: `tests_pr/pr_generated_tests.py`\n';
            comment += 'üß™ Tests have been executed and results are available in the workflow logs.\n\n';
            comment += 'üìä Code coverage report has been generated.\n';
          } else {
            comment += '‚ùå **Test generation failed**\n\n';
            comment += 'Please check the workflow logs for more details.\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          })
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          tests_pr/
          htmlcov/
