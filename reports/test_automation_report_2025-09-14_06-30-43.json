{
  "title": "🚀 Python Project Test Automation Report",
  "generated": "2025-09-14 06:30:43",
  "model_name": "llama-3.3-70b-versatile",
  "execution_time_seconds": 1.678999,
  "status": "FAILED",
  "changed_files": [
    "main.py",
    "reports/run_summary.txt",
    "reports/test_automation_report_2025-09-14_06-16-05.json",
    "reports/test_automation_report_2025-09-14_06-16-05.txt",
    "reports/test_automation_report_2025-09-14_06-16-05.xml",
    "reports/test_automation_report_2025-09-14_06-20-32.json",
    "reports/test_automation_report_2025-09-14_06-20-32.txt",
    "reports/test_automation_report_2025-09-14_06-20-32.xml",
    "tests_pr/pr_generated_tests.py"
  ],
  "syntax_validation": {
    "main.py": true,
    "generated_test_file": true
  },
  "analyzed_functions": [
    {
      "name": "add_numbers",
      "file_path": "main.py",
      "line_start": 1,
      "line_end": 2,
      "is_method": false,
      "class_name": null,
      "complexity_score": 1,
      "has_type_hints": false,
      "has_docstring": false,
      "code_snippet": "def add_numbers(a, b):\n    return a + b"
    },
    {
      "name": "multiply_numbers",
      "file_path": "main.py",
      "line_start": 4,
      "line_end": 5,
      "is_method": false,
      "class_name": null,
      "complexity_score": 1,
      "has_type_hints": false,
      "has_docstring": false,
      "code_snippet": "def multiply_numbers(a, b):\n    return a * b"
    }
  ],
  "test_results": {
    "status": "failure",
    "output": "test_add_numbers_edge_cases (__main__.TestGeneratedCode.test_add_numbers_edge_cases) ... ok\ntest_add_numbers_error_cases (__main__.TestGeneratedCode.test_add_numbers_error_cases) ... ok\ntest_add_numbers_normal_cases (__main__.TestGeneratedCode.test_add_numbers_normal_cases) ... ok\ntest_multiply_numbers_edge_cases (__main__.TestGeneratedCode.test_multiply_numbers_edge_cases) ... ok\ntest_multiply_numbers_error_cases (__main__.TestGeneratedCode.test_multiply_numbers_error_cases) ... FAIL\ntest_multiply_numbers_normal_cases (__main__.TestGeneratedCode.test_multiply_numbers_normal_cases) ... ok\n\n======================================================================\nFAIL: test_multiply_numbers_error_cases (__main__.TestGeneratedCode.test_multiply_numbers_error_cases)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/runner/work/check-python-tests/check-python-tests/tests_pr/pr_generated_tests.py\", line 45, in test_multiply_numbers_error_cases\n    with self.assertRaises(TypeError):\nAssertionError: TypeError not raised\n\n----------------------------------------------------------------------\nRan 6 tests in 0.001s\n\nFAILED (failures=1)\n",
    "coverage_report": "Name                                                                      Stmts   Miss  Cover\n---------------------------------------------------------------------------------------------\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/main.py     162     59    64%\nmain.py                                                                       4      0   100%\ntests_pr/pr_generated_tests.py                                               46      6    87%\n---------------------------------------------------------------------------------------------\nTOTAL                                                                       212     65    69%\n",
    "test_cases": [
      {
        "name": "test_add_numbers_edge_cases",
        "status": "PASS",
        "execution_time": 0.0,
        "error_message": "",
        "failure_reason": "",
        "test_method": "test_add_numbers_edge_cases"
      },
      {
        "name": "test_add_numbers_error_cases",
        "status": "PASS",
        "execution_time": 0.0,
        "error_message": "",
        "failure_reason": "",
        "test_method": "test_add_numbers_error_cases"
      },
      {
        "name": "test_add_numbers_normal_cases",
        "status": "PASS",
        "execution_time": 0.0,
        "error_message": "",
        "failure_reason": "",
        "test_method": "test_add_numbers_normal_cases"
      },
      {
        "name": "test_multiply_numbers_edge_cases",
        "status": "PASS",
        "execution_time": 0.0,
        "error_message": "",
        "failure_reason": "",
        "test_method": "test_multiply_numbers_edge_cases"
      },
      {
        "name": "test_multiply_numbers_error_cases",
        "status": "FAIL",
        "execution_time": 0.0,
        "error_message": "",
        "failure_reason": "",
        "test_method": "test_multiply_numbers_error_cases"
      },
      {
        "name": "test_multiply_numbers_normal_cases",
        "status": "PASS",
        "execution_time": 0.0,
        "error_message": "",
        "failure_reason": "",
        "test_method": "test_multiply_numbers_normal_cases"
      }
    ]
  },
  "test_cases": [
    {
      "name": "test_add_numbers_edge_cases",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_add_numbers_edge_cases"
    },
    {
      "name": "test_add_numbers_error_cases",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_add_numbers_error_cases"
    },
    {
      "name": "test_add_numbers_normal_cases",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_add_numbers_normal_cases"
    },
    {
      "name": "test_multiply_numbers_edge_cases",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_multiply_numbers_edge_cases"
    },
    {
      "name": "test_multiply_numbers_error_cases",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_multiply_numbers_error_cases"
    },
    {
      "name": "test_multiply_numbers_normal_cases",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_multiply_numbers_normal_cases"
    }
  ],
  "coverage_metrics": {
    "total_coverage": "69",
    "total_statements": "212",
    "missing_statements": "65"
  },
  "execution_logs": [
    "[2025-09-14 06:30:41] [INFO] 🚀 Starting Enhanced Python Project Test Automation",
    "[2025-09-14 06:30:41] [INFO] 📁 Detected 9 changed files: main.py, reports/run_summary.txt, reports/test_automation_report_2025-09-14_06-16-05.json, reports/test_automation_report_2025-09-14_06-16-05.txt, reports/test_automation_report_2025-09-14_06-16-05.xml, reports/test_automation_report_2025-09-14_06-20-32.json, reports/test_automation_report_2025-09-14_06-20-32.txt, reports/test_automation_report_2025-09-14_06-20-32.xml, tests_pr/pr_generated_tests.py",
    "[2025-09-14 06:30:41] [INFO] 🔍 Analyzing changed file: main.py",
    "[2025-09-14 06:30:41] [INFO] ✅ Found 2 functions/methods in main.py",
    "[2025-09-14 06:30:41] [INFO] 📊 Analysis Summary:",
    "[2025-09-14 06:30:41] [INFO]    Total Functions/Methods: 2",
    "[2025-09-14 06:30:41] [INFO]    Functions: 2, Methods: 0",
    "[2025-09-14 06:30:41] [INFO]    Average Complexity: 1.0/10",
    "[2025-09-14 06:30:41] [INFO] 🧠 Generating comprehensive test cases using llama-3.3-70b-versatile...",
    "[2025-09-14 06:30:41] [INFO] 🤖 Generating test code (attempt 1/3)...",
    "[2025-09-14 06:30:42] [SUCCESS] ✅ Generated syntactically valid test code",
    "[2025-09-14 06:30:42] [INFO] ✔️ Formatted: pr_generated_tests.py",
    "[2025-09-14 06:30:42] [SUCCESS] ✅ Generated and saved syntactically valid tests to /home/runner/work/check-python-tests/check-python-tests/tests_pr/pr_generated_tests.py",
    "[2025-09-14 06:30:42] [INFO] 🏃 Executing generated tests with comprehensive coverage analysis...",
    "[2025-09-14 06:30:42] [INFO] 🧪 Executing tests from /home/runner/work/check-python-tests/check-python-tests/tests_pr/pr_generated_tests.py",
    "[2025-09-14 06:30:43] [ERROR] ❌ Tests failed.",
    "[2025-09-14 06:30:43] [ERROR] --- Test Output ---",
    "[2025-09-14 06:30:43] [ERROR] ",
    "[2025-09-14 06:30:43] [ERROR] test_add_numbers_edge_cases (__main__.TestGeneratedCode.test_add_numbers_edge_cases) ... ok\ntest_add_numbers_error_cases (__main__.TestGeneratedCode.test_add_numbers_error_cases) ... ok\ntest_add_numbers_normal_cases (__main__.TestGeneratedCode.test_add_numbers_normal_cases) ... ok\ntest_multiply_numbers_edge_cases (__main__.TestGeneratedCode.test_multiply_numbers_edge_cases) ... ok\ntest_multiply_numbers_error_cases (__main__.TestGeneratedCode.test_multiply_numbers_error_cases) ... FAIL\ntest_multiply_numbers_normal_cases (__main__.TestGeneratedCode.test_multiply_numbers_normal_cases) ... ok\n\n======================================================================\nFAIL: test_multiply_numbers_error_cases (__main__.TestGeneratedCode.test_multiply_numbers_error_cases)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/runner/work/check-python-tests/check-python-tests/tests_pr/pr_generated_tests.py\", line 45, in test_multiply_numbers_error_cases\n    with self.assertRaises(TypeError):\nAssertionError: TypeError not raised\n\n----------------------------------------------------------------------\nRan 6 tests in 0.001s\n\nFAILED (failures=1)\n",
    "[2025-09-14 06:30:43] [ERROR] -------------------",
    "[2025-09-14 06:30:43] [INFO] \n🎯 Code Coverage: 69%",
    "[2025-09-14 06:30:43] [WARNING] 🟠 Moderate coverage, more comprehensive tests recommended"
  ]
}