{
  "title": "🚀 Python Project Test Automation Report",
  "generated": "2025-09-13 11:46:16",
  "model_name": "llama-3.3-70b-versatile",
  "execution_time_seconds": 2.378169,
  "status": "SUCCESS",
  "changed_files": [
    "main.py"
  ],
  "analyzed_functions": [
    {
      "name": "add_numbers",
      "file_path": "main.py",
      "line_start": 4,
      "line_end": 15,
      "is_method": false,
      "class_name": null,
      "code_snippet": "def add_numbers(a, b):\n    \"\"\"\n    Adds two numbers together.\n\n    Args:\n        a (int or float): The first number.\n        b (int or float): The second number.\n\n    Returns:\n        int or float: Th..."
    },
    {
      "name": "is_prime",
      "file_path": "main.py",
      "line_start": 17,
      "line_end": 32,
      "is_method": false,
      "class_name": null,
      "code_snippet": "def is_prime(n):\n    \"\"\"\n    Checks if a number is a prime number.\n\n    Args:\n        n (int): The number to check.\n\n    Returns:\n        bool: True if the number is prime, False otherwise.\n    \"\"\"\n  ..."
    },
    {
      "name": "capitalize_string",
      "file_path": "main.py",
      "line_start": 34,
      "line_end": 44,
      "is_method": false,
      "class_name": null,
      "code_snippet": "def capitalize_string(s):\n    \"\"\"\n    Capitalizes the first letter of each word in a string.\n    \n    Args:\n        s (str): The input string.\n\n    Returns:\n        str: The string with each word capi..."
    },
    {
      "name": "multiply",
      "file_path": "main.py",
      "line_start": 48,
      "line_end": 49,
      "is_method": true,
      "class_name": "Calculator",
      "code_snippet": "    def multiply(self, a, b):\n        return a * b"
    },
    {
      "name": "divide",
      "file_path": "main.py",
      "line_start": 51,
      "line_end": 54,
      "is_method": true,
      "class_name": "Calculator",
      "code_snippet": "    def divide(self, a, b):\n        if b == 0:\n            raise ValueError(\"Cannot divide by zero.\")\n        return a / b"
    },
    {
      "name": "power",
      "file_path": "main.py",
      "line_start": 56,
      "line_end": 67,
      "is_method": true,
      "class_name": "Calculator",
      "code_snippet": "    def power(self, base, exp):\n        \"\"\"\n        Calculates the power of a base to an exponent.\n\n        Args:\n            base (int or float): The base number.\n            exp (int): The exponent...."
    }
  ],
  "test_results": {
    "status": "success",
    "output": "",
    "coverage_report": "Name                                                                      Stmts   Miss  Cover\n---------------------------------------------------------------------------------------------\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/unittest/main.py     160     58    64%\nmain.py                                                                      20      0   100%\n---------------------------------------------------------------------------------------------\nTOTAL                                                                       180     58    68%\n"
  },
  "coverage_metrics": {
    "total_coverage": "68"
  },
  "execution_logs": [
    "[2025-09-13 11:46:14] [INFO] 🚀 Starting Python Project Test Automation",
    "[2025-09-13 11:46:14] [INFO] 📁 Detected 1 changed files: main.py",
    "[2025-09-13 11:46:14] [INFO] 🔍 Analyzing changed file: main.py",
    "[2025-09-13 11:46:14] [INFO] 🤖 Found 6 functions/methods to test using llama-3.3-70b-versatile",
    "[2025-09-13 11:46:14] [INFO] 🧠 Generating test cases using llama-3.3-70b-versatile...",
    "[2025-09-13 11:46:15] [INFO] ✔️ Formatted: pr_generated_tests.py",
    "[2025-09-13 11:46:15] [SUCCESS] ✅ Generated and saved tests to /home/runner/work/check-python-tests/check-python-tests/tests_pr/pr_generated_tests.py",
    "[2025-09-13 11:46:15] [INFO] 🏃 Executing generated tests with coverage analysis...",
    "[2025-09-13 11:46:15] [INFO] 🧪 Executing tests from /home/runner/work/check-python-tests/check-python-tests/tests_pr/pr_generated_tests.py",
    "[2025-09-13 11:46:16] [SUCCESS] ✅ Tests passed.",
    "[2025-09-13 11:46:16] [INFO] \n📊 Code Coverage Report (Changed Files Only):",
    "[2025-09-13 11:46:16] [INFO] Name                                                                      Stmts   Miss  Cover\n---------------------------------------------------------------------------------------------\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/unittest/main.py     160     58    64%\nmain.py                                                                      20      0   100%\n---------------------------------------------------------------------------------------------\nTOTAL                                                                       180     58    68%\n",
    "[2025-09-13 11:46:16] [INFO] 📄 Detailed HTML coverage report generated in 'htmlcov/' directory",
    "[2025-09-13 11:46:16] [INFO] \n🎯 Changed Files Code Coverage: 68%",
    "[2025-09-13 11:46:16] [WARNING] 🟠 Moderate coverage, more tests recommended"
  ]
}